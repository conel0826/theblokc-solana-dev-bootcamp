{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _slicedToArray = require(\"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nvar _sha2_js_1 = require(\"./_sha2.js\");\nvar _u64_js_1 = require(\"./_u64.js\");\nvar utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nvar _u64_js_1$default$spl = _u64_js_1.default.split(['0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc', '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118', '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2', '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694', '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65', '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5', '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4', '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70', '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df', '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b', '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30', '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8', '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8', '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3', '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec', '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b', '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178', '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b', '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c', '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'].map(function (n) {\n    return BigInt(n);\n  })),\n  _u64_js_1$default$spl2 = _slicedToArray(_u64_js_1$default$spl, 2),\n  SHA512_Kh = _u64_js_1$default$spl2[0],\n  SHA512_Kl = _u64_js_1$default$spl2[1]; // Temporary buffer, not used to store anything between runs\nvar SHA512_W_H = new Uint32Array(80);\nvar SHA512_W_L = new Uint32Array(80);\nvar SHA512 = /*#__PURE__*/function (_sha2_js_1$SHA) {\n  _inherits(SHA512, _sha2_js_1$SHA);\n  function SHA512() {\n    var _this;\n    _classCallCheck(this, SHA512);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SHA512).call(this, 128, 64, 16, false));\n    // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n    // Also looks cleaner and easier to verify with spec.\n    // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n    // h -- high 32 bits, l -- low 32 bits\n    _this.Ah = 0x6a09e667 | 0;\n    _this.Al = 0xf3bcc908 | 0;\n    _this.Bh = 0xbb67ae85 | 0;\n    _this.Bl = 0x84caa73b | 0;\n    _this.Ch = 0x3c6ef372 | 0;\n    _this.Cl = 0xfe94f82b | 0;\n    _this.Dh = 0xa54ff53a | 0;\n    _this.Dl = 0x5f1d36f1 | 0;\n    _this.Eh = 0x510e527f | 0;\n    _this.El = 0xade682d1 | 0;\n    _this.Fh = 0x9b05688c | 0;\n    _this.Fl = 0x2b3e6c1f | 0;\n    _this.Gh = 0x1f83d9ab | 0;\n    _this.Gl = 0xfb41bd6b | 0;\n    _this.Hh = 0x5be0cd19 | 0;\n    _this.Hl = 0x137e2179 | 0;\n    return _this;\n  }\n  // prettier-ignore\n  _createClass(SHA512, [{\n    key: \"get\",\n    value: function get() {\n      var Ah = this.Ah,\n        Al = this.Al,\n        Bh = this.Bh,\n        Bl = this.Bl,\n        Ch = this.Ch,\n        Cl = this.Cl,\n        Dh = this.Dh,\n        Dl = this.Dl,\n        Eh = this.Eh,\n        El = this.El,\n        Fh = this.Fh,\n        Fl = this.Fl,\n        Gh = this.Gh,\n        Gl = this.Gl,\n        Hh = this.Hh,\n        Hl = this.Hl;\n      return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    } // prettier-ignore\n  }, {\n    key: \"set\",\n    value: function set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n      this.Ah = Ah | 0;\n      this.Al = Al | 0;\n      this.Bh = Bh | 0;\n      this.Bl = Bl | 0;\n      this.Ch = Ch | 0;\n      this.Cl = Cl | 0;\n      this.Dh = Dh | 0;\n      this.Dl = Dl | 0;\n      this.Eh = Eh | 0;\n      this.El = El | 0;\n      this.Fh = Fh | 0;\n      this.Fl = Fl | 0;\n      this.Gh = Gh | 0;\n      this.Gl = Gl | 0;\n      this.Hh = Hh | 0;\n      this.Hl = Hl | 0;\n    }\n  }, {\n    key: \"process\",\n    value: function process(view, offset) {\n      // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n      for (var i = 0; i < 16; i++, offset += 4) {\n        SHA512_W_H[i] = view.getUint32(offset);\n        SHA512_W_L[i] = view.getUint32(offset += 4);\n      }\n      for (var _i = 16; _i < 80; _i++) {\n        // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n        var W15h = SHA512_W_H[_i - 15] | 0;\n        var W15l = SHA512_W_L[_i - 15] | 0;\n        var s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n        var s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n        // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n        var W2h = SHA512_W_H[_i - 2] | 0;\n        var W2l = SHA512_W_L[_i - 2] | 0;\n        var s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n        var s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n        // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n        var SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[_i - 7], SHA512_W_L[_i - 16]);\n        var SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[_i - 7], SHA512_W_H[_i - 16]);\n        SHA512_W_H[_i] = SUMh | 0;\n        SHA512_W_L[_i] = SUMl | 0;\n      }\n      var Ah = this.Ah,\n        Al = this.Al,\n        Bh = this.Bh,\n        Bl = this.Bl,\n        Ch = this.Ch,\n        Cl = this.Cl,\n        Dh = this.Dh,\n        Dl = this.Dl,\n        Eh = this.Eh,\n        El = this.El,\n        Fh = this.Fh,\n        Fl = this.Fl,\n        Gh = this.Gh,\n        Gl = this.Gl,\n        Hh = this.Hh,\n        Hl = this.Hl; // Compression function main loop, 80 rounds\n      for (var _i2 = 0; _i2 < 80; _i2++) {\n        // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n        var sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n        var sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n        //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n        var CHIh = Eh & Fh ^ ~Eh & Gh;\n        var CHIl = El & Fl ^ ~El & Gl;\n        // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n        // prettier-ignore\n        var T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[_i2], SHA512_W_L[_i2]);\n        var T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[_i2], SHA512_W_H[_i2]);\n        var T1l = T1ll | 0;\n        // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n        var sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n        var sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n        var MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;\n        var MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;\n        Hh = Gh | 0;\n        Hl = Gl | 0;\n        Gh = Fh | 0;\n        Gl = Fl | 0;\n        Fh = Eh | 0;\n        Fl = El | 0;\n        var _u64_js_1$default$add = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0);\n        Eh = _u64_js_1$default$add.h;\n        El = _u64_js_1$default$add.l;\n        Dh = Ch | 0;\n        Dl = Cl | 0;\n        Ch = Bh | 0;\n        Cl = Bl | 0;\n        Bh = Ah | 0;\n        Bl = Al | 0;\n        var All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n        Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n        Al = All | 0;\n      }\n      // Add the compressed chunk to the current hash value\n      var _u64_js_1$default$add2 = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0);\n      Ah = _u64_js_1$default$add2.h;\n      Al = _u64_js_1$default$add2.l;\n      var _u64_js_1$default$add3 = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0);\n      Bh = _u64_js_1$default$add3.h;\n      Bl = _u64_js_1$default$add3.l;\n      var _u64_js_1$default$add4 = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0);\n      Ch = _u64_js_1$default$add4.h;\n      Cl = _u64_js_1$default$add4.l;\n      var _u64_js_1$default$add5 = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0);\n      Dh = _u64_js_1$default$add5.h;\n      Dl = _u64_js_1$default$add5.l;\n      var _u64_js_1$default$add6 = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0);\n      Eh = _u64_js_1$default$add6.h;\n      El = _u64_js_1$default$add6.l;\n      var _u64_js_1$default$add7 = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0);\n      Fh = _u64_js_1$default$add7.h;\n      Fl = _u64_js_1$default$add7.l;\n      var _u64_js_1$default$add8 = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0);\n      Gh = _u64_js_1$default$add8.h;\n      Gl = _u64_js_1$default$add8.l;\n      var _u64_js_1$default$add9 = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0);\n      Hh = _u64_js_1$default$add9.h;\n      Hl = _u64_js_1$default$add9.l;\n      this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n  }, {\n    key: \"roundClean\",\n    value: function roundClean() {\n      SHA512_W_H.fill(0);\n      SHA512_W_L.fill(0);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.fill(0);\n      this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n  }]);\n  return SHA512;\n}(_sha2_js_1.SHA2);\nexports.SHA512 = SHA512;\nvar SHA512_224 = /*#__PURE__*/function (_SHA) {\n  _inherits(SHA512_224, _SHA);\n  function SHA512_224() {\n    var _this2;\n    _classCallCheck(this, SHA512_224);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SHA512_224).call(this));\n    // h -- high 32 bits, l -- low 32 bits\n    _this2.Ah = 0x8c3d37c8 | 0;\n    _this2.Al = 0x19544da2 | 0;\n    _this2.Bh = 0x73e19966 | 0;\n    _this2.Bl = 0x89dcd4d6 | 0;\n    _this2.Ch = 0x1dfab7ae | 0;\n    _this2.Cl = 0x32ff9c82 | 0;\n    _this2.Dh = 0x679dd514 | 0;\n    _this2.Dl = 0x582f9fcf | 0;\n    _this2.Eh = 0x0f6d2b69 | 0;\n    _this2.El = 0x7bd44da8 | 0;\n    _this2.Fh = 0x77e36f73 | 0;\n    _this2.Fl = 0x04c48942 | 0;\n    _this2.Gh = 0x3f9d85a8 | 0;\n    _this2.Gl = 0x6a1d36c8 | 0;\n    _this2.Hh = 0x1112e6ad | 0;\n    _this2.Hl = 0x91d692a1 | 0;\n    _this2.outputLen = 28;\n    return _this2;\n  }\n  return SHA512_224;\n}(SHA512);\nvar SHA512_256 = /*#__PURE__*/function (_SHA2) {\n  _inherits(SHA512_256, _SHA2);\n  function SHA512_256() {\n    var _this3;\n    _classCallCheck(this, SHA512_256);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(SHA512_256).call(this));\n    // h -- high 32 bits, l -- low 32 bits\n    _this3.Ah = 0x22312194 | 0;\n    _this3.Al = 0xfc2bf72c | 0;\n    _this3.Bh = 0x9f555fa3 | 0;\n    _this3.Bl = 0xc84c64c2 | 0;\n    _this3.Ch = 0x2393b86b | 0;\n    _this3.Cl = 0x6f53b151 | 0;\n    _this3.Dh = 0x96387719 | 0;\n    _this3.Dl = 0x5940eabd | 0;\n    _this3.Eh = 0x96283ee2 | 0;\n    _this3.El = 0xa88effe3 | 0;\n    _this3.Fh = 0xbe5e1e25 | 0;\n    _this3.Fl = 0x53863992 | 0;\n    _this3.Gh = 0x2b0199fc | 0;\n    _this3.Gl = 0x2c85b8aa | 0;\n    _this3.Hh = 0x0eb72ddc | 0;\n    _this3.Hl = 0x81c52ca2 | 0;\n    _this3.outputLen = 32;\n    return _this3;\n  }\n  return SHA512_256;\n}(SHA512);\nvar SHA384 = /*#__PURE__*/function (_SHA3) {\n  _inherits(SHA384, _SHA3);\n  function SHA384() {\n    var _this4;\n    _classCallCheck(this, SHA384);\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(SHA384).call(this));\n    // h -- high 32 bits, l -- low 32 bits\n    _this4.Ah = 0xcbbb9d5d | 0;\n    _this4.Al = 0xc1059ed8 | 0;\n    _this4.Bh = 0x629a292a | 0;\n    _this4.Bl = 0x367cd507 | 0;\n    _this4.Ch = 0x9159015a | 0;\n    _this4.Cl = 0x3070dd17 | 0;\n    _this4.Dh = 0x152fecd8 | 0;\n    _this4.Dl = 0xf70e5939 | 0;\n    _this4.Eh = 0x67332667 | 0;\n    _this4.El = 0xffc00b31 | 0;\n    _this4.Fh = 0x8eb44a87 | 0;\n    _this4.Fl = 0x68581511 | 0;\n    _this4.Gh = 0xdb0c2e0d | 0;\n    _this4.Gl = 0x64f98fa7 | 0;\n    _this4.Hh = 0x47b5481d | 0;\n    _this4.Hl = 0xbefa4fa4 | 0;\n    _this4.outputLen = 48;\n    return _this4;\n  }\n  return SHA384;\n}(SHA512);\nexports.sha512 = (0, utils_js_1.wrapConstructor)(function () {\n  return new SHA512();\n});\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(function () {\n  return new SHA512_224();\n});\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(function () {\n  return new SHA512_256();\n});\nexports.sha384 = (0, utils_js_1.wrapConstructor)(function () {\n  return new SHA384();\n});","map":null,"metadata":{},"sourceType":"script"}