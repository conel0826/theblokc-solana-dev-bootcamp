{"ast":null,"code":"'use client';\n\nvar _jsxFileName = \"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/src/frontpage.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Image from \"next/image\";\nimport viper from './assets/viper.png';\nimport { useState, useEffect } from 'react';\nimport idl from './user_input.json';\nimport { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\nimport { Program, AnchorProvider, web3 } from '@project-serum/anchor';\nimport * as Web3 from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SystemProgram,\n  Keypair\n} = web3;\nconst bs58 = require('bs58');\nconst rpcUrl = 'https://api.testnet.solana.com';\nconst method = 'getProgramAccounts';\nconst programPubkey = 'UhH9QdWTjFedFNtasBBaxwP7A52JPipkVMqBZuLR6QB';\nconst programID = new PublicKey('UhH9QdWTjFedFNtasBBaxwP7A52JPipkVMqBZuLR6QB');\nconst opts = {\n  preflightCommitment: \"processed\"\n};\n\n//const network = \"http://127.0.0.1:8899\";  // for localnet\n//const network = clusterApiUrl(\"devnet\") // for devnet\nconst network = clusterApiUrl(\"testnet\"); // for testnet\n\nconst new_account = Keypair.generate();\nconsole.log(new_account);\nfunction Frontpage() {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [walletaddress, setWalletAddress] = useState(\"\");\n  const [Tx, setTx] = useState(\"\");\n  const [txSig, setTxSig] = useState('');\n  const [transactionDetails, setTransactionDetails] = useState(null);\n  const [txDone, setTxDone] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const getProvider = () => {\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new AnchorProvider(connection, window.solana, opts.preflightCommitment);\n    return provider;\n  };\n  const connectWallet = async () => {\n    if (!window.solana) {\n      alert(\"Solana wallet not found. Please install Sollet or Phantom extension.\");\n      return;\n    }\n    try {\n      await window.solana.connect();\n      const provider = getProvider();\n      const walletAddress = provider.wallet.publicKey.toString();\n      setWalletAddress(walletAddress);\n    } catch (err) {\n      console.error(\"Error connecting wallet:\", err);\n    }\n  };\n  async function input() {\n    const dataAcc = new_account;\n    console.log(dataAcc);\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    try {\n      const txSignature = await program.rpc.initialize(userInput, {\n        accounts: {\n          newAccount: new_account.publicKey,\n          signer: provider.wallet.publicKey,\n          systemProgram: SystemProgram.programId\n        },\n        signers: [new_account]\n      });\n      const confirmation = await provider.connection.confirmTransaction(txSignature, 'confirmed');\n      console.log('Transaction Confirmation:', confirmation);\n      console.log('Transaction Signature:', txSignature);\n      setTx(txSignature);\n      setTxDone(true);\n      const account = await program.account.newAccount.fetch(new_account.publicKey);\n      console.log('Output:', account);\n    } catch (err) {\n      console.error(\"Transaction Error:\", err);\n    }\n  }\n  const findTxRes = async () => {\n    try {\n      const conn = new Web3.Connection('https://api.testnet.solana.com');\n      const fetchedTransaction = await conn.getConfirmedTransaction(txSig);\n      console.log('tx :', fetchedTransaction);\n      if (fetchedTransaction) {\n        setTransactionDetails(fetchedTransaction);\n      } else {\n        console.log('Transaction not found.');\n      }\n    } catch (error) {\n      console.error('Error fetching transaction:', error);\n    }\n  };\n  const getAllTransactions = () => {\n    const requestData = {\n      jsonrpc: '2.0',\n      id: 1,\n      method: method,\n      params: [programPubkey]\n    };\n    fetch(rpcUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestData)\n    }).then(response => response.json()).then(data => {\n      setTransactions(data.result);\n      console.log('Result ', data.result);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  useEffect(() => {\n    getAllTransactions();\n  }, []);\n  const output = data => {\n    try {\n      const bytes = bs58.decode(data);\n      const asciiString = Buffer.from(bytes).toString('ascii');\n      return asciiString;\n    } catch (error) {\n      console.error('Error decoding Base58 data:', error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This Dapp is currently connected at Solana Testnet Cluster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '16px',\n          color: 'violet'\n        },\n        children: [\"Address: \", walletaddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: viper,\n        alt: \"Logo\",\n        height: 100,\n        width: 360,\n        className: \"App-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Type Something in here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: input,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '16px',\n          color: 'violet'\n        },\n        children: [\"Signature: \", Tx]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 1\n      }, this), txDone && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: 'smaller'\n          },\n          children: [\"Transaction confirmed!\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://explorer.solana.com/tx/${Tx}?cluster=testnet`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View on Solana Explorer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '16px',\n            color: 'yellow'\n          },\n          children: \"Please wait for a bit before trying to fetch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: txSig,\n        onChange: event => setTxSig(event.target.value),\n        placeholder: \"Enter Transaction Signature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: findTxRes,\n        children: \"Fetch Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), transactionDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Transaction Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), transactionDetails.transaction.instructions.length >= 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your Input was \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: transactionDetails.transaction.instructions[0].data.slice(8).toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), \" in this transaction\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transaction data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '16px',\n        color: 'yellow'\n      },\n      children: \"All Transactions of this Dapp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data Account: \", transaction.pubkey]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data: \", output(transaction.account.data).slice(6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(Frontpage, \"iTTE7XiI06EpyRzT2387bCu7d5w=\");\n_c = Frontpage;\nexport default Frontpage;\nvar _c;\n$RefreshReg$(_c, \"Frontpage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","Image","viper","useState","useEffect","idl","Connection","PublicKey","clusterApiUrl","Program","AnchorProvider","web3","Web3","jsxDEV","_jsxDEV","SystemProgram","Keypair","bs58","require","rpcUrl","method","programPubkey","programID","opts","preflightCommitment","network","new_account","generate","console","log","Frontpage","userInput","setUserInput","walletaddress","setWalletAddress","Tx","setTx","txSig","setTxSig","transactionDetails","setTransactionDetails","txDone","setTxDone","transactions","setTransactions","getProvider","connection","provider","window","solana","connectWallet","alert","connect","walletAddress","wallet","publicKey","toString","err","error","input","dataAcc","program","txSignature","rpc","initialize","accounts","newAccount","signer","systemProgram","programId","signers","confirmation","confirmTransaction","account","fetch","findTxRes","conn","fetchedTransaction","getConfirmedTransaction","getAllTransactions","requestData","jsonrpc","id","params","headers","body","JSON","stringify","then","response","json","data","result","catch","output","bytes","decode","asciiString","Buffer","from","className","children","fileName","lineNumber","columnNumber","style","fontSize","color","onClick","src","alt","height","width","value","onChange","e","target","href","rel","type","event","placeholder","transaction","instructions","length","slice","map","index","pubkey","_c","$RefreshReg$"],"sources":["/home/conel0826/theblokc-solana-dev-bootcamp/my-app/src/frontpage.js"],"sourcesContent":["'use client'\nimport './App.css';\nimport Image from \"next/image\"\nimport viper from './assets/viper.png'\nimport { useState, useEffect} from 'react'\n\nimport idl from './user_input.json'\nimport { Connection, PublicKey, clusterApiUrl  } from '@solana/web3.js';\nimport { Program, AnchorProvider, web3, } from '@project-serum/anchor';\nimport * as Web3 from '@solana/web3.js';\nconst {SystemProgram,Keypair} = web3;\nconst bs58 = require('bs58');\n\n\nconst rpcUrl = 'https://api.testnet.solana.com';\nconst method = 'getProgramAccounts';\nconst programPubkey = 'UhH9QdWTjFedFNtasBBaxwP7A52JPipkVMqBZuLR6QB';\n\n\n\n\nconst programID = new PublicKey('UhH9QdWTjFedFNtasBBaxwP7A52JPipkVMqBZuLR6QB')\nconst opts = {\n  preflightCommitment:\"processed\",\n}\n\n\n//const network = \"http://127.0.0.1:8899\";  // for localnet\n//const network = clusterApiUrl(\"devnet\") // for devnet\nconst network = clusterApiUrl(\"testnet\") // for testnet\n\n\nconst new_account = Keypair.generate();\nconsole.log(new_account)\n\nfunction Frontpage() {\n  \n  const [userInput, setUserInput] = useState(\"\");\n  const [walletaddress, setWalletAddress] = useState(\"\");\n  const [Tx, setTx] = useState(\"\");\n  const [txSig, setTxSig] = useState('');\n  const [transactionDetails, setTransactionDetails] = useState(null);\n  const [txDone, setTxDone] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n\n\n\n  const getProvider = () => {\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new AnchorProvider(\n      connection,\n      window.solana,\n      opts.preflightCommitment\n    );\n    return provider;\n  };\n\n  const connectWallet = async () => {\n    if (!window.solana) {\n      alert(\"Solana wallet not found. Please install Sollet or Phantom extension.\");\n      return;\n    }\n\n    try {\n      await window.solana.connect();\n      const provider = getProvider();\n      const walletAddress = provider.wallet.publicKey.toString();\n      setWalletAddress(walletAddress);\n    } catch (err) {\n      console.error(\"Error connecting wallet:\", err);\n    }\n  };\n\n\n\n\nasync function input() {\n  const dataAcc = new_account;\n  console.log(dataAcc);\n  const provider = getProvider();\n  const program = new Program(idl, programID, provider);\n\n  try {\n\n    const txSignature = await program.rpc.initialize(userInput, {\n      accounts: {\n        newAccount: new_account.publicKey,\n        signer: provider.wallet.publicKey,\n        systemProgram: SystemProgram.programId,\n      },\n      signers: [new_account],\n    });\n\n    const confirmation = await provider.connection.confirmTransaction(txSignature, 'confirmed');\n    console.log('Transaction Confirmation:', confirmation);\n\n\n    console.log('Transaction Signature:', txSignature);\n\n    setTx(txSignature);\n     setTxDone(true)\n    const account = await program.account.newAccount.fetch(new_account.publicKey);\n    console.log('Output:', account);\n  } catch (err) {\n    console.error(\"Transaction Error:\", err);\n  }\n}\n\n\n\n  \nconst findTxRes = async () => {\n  try {\n    const conn = new Web3.Connection('https://api.testnet.solana.com');\n    const fetchedTransaction = await conn.getConfirmedTransaction(txSig);\n\n    console.log('tx :', fetchedTransaction)\n\n    if (fetchedTransaction) {\n      setTransactionDetails(fetchedTransaction);\n    } else {\n      console.log('Transaction not found.');\n    }\n  } catch (error) {\n    console.error('Error fetching transaction:', error);\n  }\n};\n\n\nconst getAllTransactions = () => {\n  const requestData = {\n    jsonrpc: '2.0',\n    id: 1,\n    method: method,\n    params: [programPubkey],\n  };\n\n  fetch(rpcUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestData),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      setTransactions(data.result); \n      console.log('Result ',data.result)\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n};\n\nuseEffect(() => {\n\n  getAllTransactions();\n}, []);\n\nconst output = (data) => {\n  try {\n    const bytes = bs58.decode(data);\n    const asciiString = Buffer.from(bytes).toString('ascii');\n    return asciiString;\n  } catch (error) {\n    console.error('Error decoding Base58 data:', error);\n    return null;\n  }\n};\n\n\n  return (\n\n    \n    <div className=\"App\">\n      <header className=\"App-header\">\n<p>This Dapp is currently connected at Solana Testnet Cluster</p>\n<br/>\n      <p style={{ fontSize: '16px', color: 'violet' }}>Address: {walletaddress}</p>\n    <button onClick={connectWallet}>Connect Wallet</button>\n    <Image src={viper} alt=\"Logo\" height={100}width={360}className=\"App-logo\" />\n      \n<p>Type Something in here</p>\n\n\n  <input value={userInput} onChange={(e) => setUserInput(e.target.value)} />\n<button onClick={input}>Submit</button>\n<p style={{ fontSize: '16px', color: 'violet' }}>Signature: {Tx}</p>\n{txDone && (\n  <div>\n          <p style={{ fontSize: 'smaller' }}>\n            Transaction confirmed!{' '}\n            <a\n              href={`https://explorer.solana.com/tx/${Tx}?cluster=testnet`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View on Solana Explorer\n            </a>\n          </p>\n          <p style={{ fontSize: '16px', color: 'yellow' }}>Please wait for a bit before trying to fetch</p>\n          </div>\n        )}  \n<input\n            type=\"text\"\n            value={txSig}\n            onChange={(event) => setTxSig(event.target.value)}\n            placeholder=\"Enter Transaction Signature\"\n          />\n          <button onClick={findTxRes}>Fetch Transaction</button>\n   \n          {transactionDetails ? (\n          <div>\n            <h4>Transaction Details</h4>\n            {transactionDetails.transaction.instructions.length >= 2 ? (\n              <div>\n                <p>\n                  Your Input was {' '}\n                  <strong>{transactionDetails.transaction.instructions[0].data.slice(8).toString()}</strong> in this\n                  transaction\n                </p>\n              </div>\n            ) : (\n              <p>No transaction data available.</p>\n            )}\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n      </header>\n     <p style={{ fontSize: '16px', color: 'yellow' }}>All Transactions of this Dapp</p>\n    <div>\n          {transactions.map((transaction, index) => (\n            <div key={index}>\n              <p>Data Account: {transaction.pubkey}</p>\n              <p>Data: {output(transaction.account.data).slice(6)}</p>\n            </div>\n          ))}\n        </div>\n    </div>\n  );\n}\n\nexport default Frontpage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}