{"ast":null,"code":"var _jsxFileName = \"/home/conel0826/theblokc-solana-dev-bootcamp/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport idl from './idl.json';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { Program, web3 } from '@project-serum/anchor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst programID = new web3.PublicKey('EVyUf1GBFMEdThER6pbEPbervBFj5Rc8bv67M2Lo1odK');\n\n// Create a connection to the Solana network\nconst connection = new web3.Connection(web3.clusterApiUrl('devnet'));\n\n// Create a provider using the Solana wallet extension\n\nfunction App() {\n  _s();\n  var provider;\n  const [selectedOption, setSelectedOption] = useState('');\n  const options = ['Option 1', 'Option 2', 'Option 3'];\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const program = new Program(idl, programID, provider);\n\n  // Declare a state variable for input box\n  const [userInputText, setInputValue] = useState(\"\");\n  const getProvider = async () => {\n    var _window$solana;\n    Wallet;\n    provider = await new web3.WalletProvider(connection, (_window$solana = window.solana) === null || _window$solana === void 0 ? void 0 : _window$solana.isPhantom);\n  };\n\n  // Function to handle the onClick event of first button\n  const submission = async () => {\n    await program.methods.initialize(userInputText).rpc();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"First,\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProvider,\n      children: \"click here to connect your local phantom wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \", then,\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInputText,\n      onChange: e => setInputValue(e.target.value),\n      placeholder: \"input any text here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \", afterward,\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submission,\n      children: \"click here to submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \", note this submission, and more alike, are sent to the Solana blockchain, with an associated public address; If such exists, you may,\", ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: handleOptionChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        value: \"\",\n        children: \"view and select here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), \", and here its associated submitted text: \", selectedOption]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"URmTD3e8qGD8V/rgguCaWBpWcbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","idl","Wallet","Program","web3","jsxDEV","_jsxDEV","programID","PublicKey","connection","Connection","clusterApiUrl","App","_s","provider","selectedOption","setSelectedOption","options","handleOptionChange","event","target","value","program","userInputText","setInputValue","getProvider","_window$solana","WalletProvider","window","solana","isPhantom","submission","methods","initialize","rpc","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","placeholder","hidden","map","option","index","_c","$RefreshReg$"],"sources":["/home/conel0826/theblokc-solana-dev-bootcamp/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n// import { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport idl from './idl.json'\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { Program, web3 } from '@project-serum/anchor';\n\nconst programID = new web3.PublicKey('EVyUf1GBFMEdThER6pbEPbervBFj5Rc8bv67M2Lo1odK');\n\n// Create a connection to the Solana network\nconst connection = new web3.Connection(web3.clusterApiUrl('devnet'));\n\n// Create a provider using the Solana wallet extension\n\nfunction App() {\n  var provider;\n\n  const [selectedOption, setSelectedOption] = useState('');\n\n  const options = ['Option 1', 'Option 2', 'Option 3'];\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const program = new Program(idl, programID, provider);\n  \n  // Declare a state variable for input box\n  const [userInputText, setInputValue] = useState(\"\");\n  \n  const getProvider = async () => {\n    Wallet\n    provider = await new web3.WalletProvider(connection, window.solana?.isPhantom); \n  };\n\n  // Function to handle the onClick event of first button\n  const submission = async () => {\n    await program.methods.initialize(userInputText).rpc();\n  };\n\n  return (\n    <div>\n      First,{' '}\n      <button onClick={getProvider}>\n        click here to connect your local phantom wallet\n      </button>\n      , then,{' '}\n      <input \n        type=\"text\" \n        value={userInputText} \n        onChange={ e => setInputValue(e.target.value)}\n        placeholder=\"input any text here\"\n      />\n      , afterward,{' '}\n      <button onClick={submission}>\n        click here to submit\n      </button>\n      , note this submission, and more alike, \n      are sent to the Solana blockchain, \n      with an associated public address; \n      If such exists, you may,{' '}\n      <select \n        value={selectedOption} \n        onChange={handleOptionChange}\n      >\n        <option hidden value=''>view and select here</option>\n        {options.map((option, index) => (\n          <option key={index} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n      , and here its associated submitted text: {selectedOption}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}