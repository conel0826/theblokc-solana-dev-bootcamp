{"version":3,"file":"index.iife.min.js","sources":["../../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../../../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","../../../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha512.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/utils.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/modular.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/curve.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/edwards.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/montgomery.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/ed25519.js","../src/utils/ed25519.ts","../src/utils/to-buffer.ts","../../../node_modules/.pnpm/bn.js@5.0.0/node_modules/bn.js/lib/bn.js","../../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../../../node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","../../../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/text-encoding-utf-8@1.0.2/node_modules/text-encoding-utf-8/lib/encoding.lib.js","../../../node_modules/.pnpm/borsh@0.7.0/node_modules/borsh/lib/index.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../../../node_modules/.pnpm/@solana+buffer-layout@4.0.0/node_modules/@solana/buffer-layout/lib/Layout.js","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/timing.ts","../src/sysvar.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../../../node_modules/.pnpm/bigint-buffer@1.1.5/node_modules/bigint-buffer/dist/browser.js","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../../../node_modules/.pnpm/superstruct@0.14.2/node_modules/superstruct/lib/index.es.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/nil.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/version.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/generateRequest.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/client/browser/index.js","../src/epoch-schedule.ts","../src/errors.ts","../src/__forks__/browser/fetch-impl.ts","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/typeof.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/regenerator/index.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/classCallCheck.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/toPrimitive.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/toPropertyKey.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/createClass.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/inherits.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../src/rpc-websocket.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/_shortw_utils.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/secp256k1.js","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// Caching slows it down 2-3x\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    if (hex.length % 2)\n        throw new Error('hex string is invalid: unpadded ' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Big Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport const numberToBytesBE = (n, len) => hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n, len) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n) => hexToBytes(numberToHexUnpadded(n));\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs) {\n    const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrs.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\n// Bit operations\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n, pos) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n, pos, value) => n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n ** BigInt(nByteLength * 8);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // if x=0 and x_0 = 1, fail\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => mod(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => pow(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return numberToBytesLE(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n        const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n        if (fieldLen === montgomeryBytes)\n            u[fieldLen - 1] &= 127; // 0b0111_1111\n        return bytesToNumberLE(u);\n    }\n    function decodeScalar(n) {\n        const bytes = ensureBytes('scalar', n);\n        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n        return bytesToNumberLE(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","import { mod } from './modular.js';\nimport { bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return utf8ToBytes(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    validateObject(options, {\n        DST: 'string',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexport function createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { mod, pow2, isNegativeLE, Field, FpSqrtEven } from './abstract/modular.js';\nimport { equalBytes, bytesToHex, bytesToNumberLE, numberToBytesLE, ensureBytes, } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n ** 255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n ** 252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = twistedEdwards({ ...ed25519Defaults, domain: ed25519_domain });\nexport const ed25519ph = twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n});\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const aPub = ed25519.getPublicKey(utils.randomPrivateKey());\n *   x25519.getSharedSecret(edwardsToMontgomery(aPub), edwardsToMontgomery(someonesPub))\n */\nexport function edwardsToMontgomery(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((y - _1n) * Fp.inv(y + _1n)));\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) = map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst { hashToCurve, encodeToCurve } = htf.createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n});\nexport { hashToCurve, encodeToCurve };\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistrettoPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistrettoPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-bit hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-bit output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ed25519.ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ed25519.ExtendedPoint.ZERO);\nexport { RistrettoPoint };\n// https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/14/\n// Appendix B.  Hashing to ristretto255\nexport const hash_to_ristretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = htf.expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistrettoPoint.hashToCurve(uniform_bytes);\n    return P;\n};\n//# sourceMappingURL=ed25519.js.map","import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype._move = function _move (dest) {\n    dest.words = this.words;\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this._strip();\n    var littleEndian = endian === 'le';\n    var res = allocate(ArrayType, reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r._strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    a.umod(this.m)._forceRed(this)._move(a);\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = this._buildArgs(accounts?.length ? [accounts] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((c, point, isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            // Zero is valid point too!\n            if (this.is0()) {\n                if (CURVE.allowInfinityPoint)\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size (nBitLength+64)\n         * as per FIPS 186 B.4.1 with modulo bias being neglible.\n         */\n        randomPrivateKey: () => {\n            const rand = CURVE.randomBytes(Fp.BYTES + 8);\n            const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n            return ut.numberToBytesBE(num, CURVE.nByteLength);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash (not message: you need to hash it by yourself).\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param opts `lowS, extraEntropy, prehash`\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = ut.createHmacDrbg(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n};\nconst isoMap = htf.isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j))));\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n});\n//# sourceMappingURL=secp256k1.js.map","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = process.env.TEST_LIVE ? 3762 : 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","bool","lengths","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","assert","assert$3","crypto","globalThis","u32","Uint32Array","createView","DataView","rotr","word","shift","v","padStart","TextEncoder","encode","toBytes","concatBytes","arrays","every","reduce","result","pad","Hash","clone","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","wrapConstructorWithOpts","hashCons","opts","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","take","dataView","process","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64$2","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","_0n","_1n","_2n","u8a","hexes","bytesToHex","hex","numberToHexUnpadded","hexToNumber","hexToBytes","hexByte","byte","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","arrs","r","sum","forEach","equalBytes","b1","b2","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","mod","power","modulo","pow2","invert","u","q","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","sqr","Q1div2","tonelliSlow","neg","ONE","g","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","n2","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","FpPow","f","p","FpInvertBatch","nums","lastMultiplied","acc","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","FpSqrtEven","elm","hashToPrivateScalar","groupOrder","minLen","wNAF","bits","constTimeNegate","condition","item","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","static","toInv","fromAffine","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","normalizeZ","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","key","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","ut.concatBytes","sign","options","R","verifyOpts","verify","sig","publicKey","SB","fromHex","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","montgomeryBits","powPminus2","Gu","montgomery","montgomeryBytes","fieldLen","cswap","x_2","x_3","dummy","assertFieldElement","a24","montgomeryLadder","pointU","x_1","z_2","z_3","sw","t","k_t","AA","BB","DA","CB","dacb","da_cb","z2","encodeUCoordinate","decodeUCoordinate","uEnc","decodeScalar","scalarMult","_scalar","pu","GuBytes","scalarMultBase","getSharedSecret","privateKey","validateDST","os2ip","i2osp","strxor","isBytes","isNum","expand_message_xmd","DST","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","args","pseudo_random_bytes","expand_message_xof","dkLen","hash_to_field","count","expand","_DST","log2p","L","len_in_bytes","prb","elm_offset","tv","isogenyMap","COEFF","xNum","xDen","yNum","yDen","createHasher","def","hashToCurve","u0","u1","encodeToCurve","encodeDST","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","ELL2_C2","ELL2_C3","ELL2_C4","ELL2_J","map_to_curve_elligator2_curve25519","tv1","xd","x1n","tv2","gxd","gx1","tv3","y11","y12","e1","y1","x2n","y21","y22","gx2","e2","e3","xn","e4","xMn","xMd","yMn","yMd","ELL2_C1_EDWARDS","map_to_curve_elligator2_edwards25519","yn","yd","htf.createHasher","scalars","assertRstPoint","RistrettoPoint","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","Ns","Ns_D_is_sq","s_","Nt","s2","W0","W1","W2","W3","ep","ap","r1","R1","r2","R2","emsg","u2","u1_2","u2_2","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","one","two","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","_unused","toBuffer","module","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","_strip","toArray","w","off","parseHex","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","_move","_expand","strip","_normSign","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toArrayLike","ArrayType","reqLength","allocate","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","self","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","isqr","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","divmod","positive","divn","umod","divRound","dm","half","modn","egcd","isEven","yp","xp","im","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","nOne","lpow","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sigma1","sigma0","SHA224","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Struct","properties","_classCallCheck","assign","_createClass","SOLANA_SCHEMA","decodeUnchecked","Enum","_Struct","_inherits","_super","_createSuper","_this","keys","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","toStringTag","PublicKey","decoded","toBase58","zeroPad","unique","_createWithSeed","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fromPublicKey","programId","publicKeyBytes","wrap","_callee$","_context","abrupt","stop","createWithSeed","_x2","_x3","createProgramAddressSync","seeds","_createProgramAddress","_callee2","_callee2$","_context2","createProgramAddress","_x4","_x5","findProgramAddressSync","nonce","address","seedsWithNonce","err","_findProgramAddress","_callee3","_callee3$","_context3","findProgramAddress","_x6","_x7","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","Layout_1","Layout$1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","_Error","signature","_wrapNativeSuper","TransactionExpiredTimeoutError","_Error2","_super2","timeoutSeconds","_this2","toFixed","TransactionExpiredNonceInvalidError","_Error3","_super3","_this3","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","_iterator","_createForOfIteratorHelper","_step","done","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","assert$1","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","_toConsumableArray","writableSigners","filter","_ref","_ref2","_slicedToArray","isSigner","isWritable","readonlySigners","_ref3","_ref4","writableNonSigners","_ref5","_ref6","readonlyNonSigners","_ref7","_ref8","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","_writableSigners$","payerAddress","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","extractTableLookup","lookupTable","_this$drainKeysFoundI","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","_this$drainKeysFoundI2","writableIndexes","drainedWritableKeys","_this$drainKeysFoundI3","_this$drainKeysFoundI4","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","_loop","_step$value","lookupTableIndex","findIndex","entry","compile","getOrInsertDefault","payerKeyMeta","_iterator2","_step2","ix","_iterator3","_step3","accountMeta","Message","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","compiledKeys","payerKey","_compiledKeys$getMess","_compiledKeys$getMess2","accountCount","dataSlice","messageArgs","MessageV0","compiledInstructions","addressTableLookups","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","_iterator4","_step4","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","_iterator5","_step5","encodedAccountKeyIndexesLength","encodedDataLength","_iterator6","_step6","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","lookupTableAccounts","_iterator7","_step7","extractResult","_accountKeysFromLooku","_accountKeysFromLooku2","_extractResult","addressTableLookup","_extractResult$","maskedPrefix","version","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","_len","items","_key","compileMessage","JSON","stringify","warn","accountMetas","_objectSpread","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","_uniqueMetas$splice","_uniqueMetas$splice2","payerMeta","signedKeys","unsignedKeys","invariant","_compile","valid","pair","serializeMessage","_getEstimatedFee","connection","getFeeForMessage","sent","getEstimatedFee","setSigners","_len2","_key2","seen","Set","_len3","_key3","uniqueSigners","_i","_signers","signer","_partialSign","partialSign","_len4","_key4","_i2","_signers2","_len5","_key5","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","_step2$value","config","_Object$assign","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","compileToLegacyMessage","compileToV0Message","decompile","compiledIx","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","messageData","signerPubkeys","signerIndex","signaturesLength","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","_sendAndConfirmTransaction","sendOptions","status","nonceAccountPubkey","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","encodeDecode","bigInt","_encodeDecode","bigIntLayout","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","_Object$entries","SYSTEM_INSTRUCTION_LAYOUTS","_Object$entries$_i","ixType","decodeCreateAccount","checkKeyLength","_decodeData","Create","lamports","space","fromPubkey","newAccountPubkey","decodeTransfer","_decodeData2","Transfer","toPubkey","decodeTransferWithSeed","_decodeData3","TransferWithSeed","basePubkey","decodeAllocate","_decodeData4","Allocate","accountPubkey","decodeAllocateWithSeed","_decodeData5","AllocateWithSeed","decodeAssign","_decodeData6","Assign","decodeAssignWithSeed","_decodeData7","AssignWithSeed","decodeCreateWithSeed","_decodeData8","CreateWithSeed","decodeNonceInitialize","_decodeData9","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","_decodeData10","WithdrawNonceAccount","decodeNonceAuthorize","_decodeData11","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccount","params","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","_load","program","balanceNeeded","programInfo","dataLayout","transactions","_data","_transaction","REQUESTS_PER_SECOND","_dataLayout","_data2","_transaction2","deployCommitment","finalizeSignature","_yield$connection$con","currentSlot","getMinimumBalanceForRentExemption","getAccountInfo","executable","owner","bytesLengthPadding","_rpcEndpoint","all","getSlot","slot","t0","load","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","iterator","print","shiftIterator","toFailure","branch","refinement","toFailures","run","coerce","coercer","validator","ts","refiner","props","is","validate","tuples","tuple","define","any","Element","literal","description","never","nullable","optional","record","Key","Value","Elements","Never","Structs","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","hashfunc","generateUUID","namespace","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","M","_t","_t2","v5","v5$1","nil","generateRequest","method","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","fetch","_interopRequireDefault","_typeof","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","methodName","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","__proto__","awrap","async","iter","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","_next","_throw","Constructor","_toPrimitive","prim","_toPropertyKey","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","_setPrototypeOf","subClass","superClass","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","_regenerator","_asyncToGenerator2","_typeof2","require$$3","_classCallCheck2","require$$4","_createClass2","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","send","promise","_login","resp","login","_listMethods","listMethods","notify","_subscribe","subscribe","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","close","_this4","clearTimeout","addEventListener","notification","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","RpcWebSocketClient","_RpcWebSocketCommonCl","url","rpc","createRpc","underlyingSocket","_this$underlyingSocke","readyState","_get2","_get","_this$underlyingSocke2","_get3","RpcWebSocketCommonClient","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","_BufferLayout$struct$","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","_matches","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","_objectWithoutProperties","_excluded","createRpcResult","pick","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","too_many_requests_retries","waitTime","text","body","headers","COMMON_HTTP_HEADERS","statusText","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","_process$env$npm_pack","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_requestPromises$requ","_extractCommitmentFro","requestHash","_buildArgs","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_getBalanceAndContext","_callee5","_extractCommitmentFro2","_callee5$","_context5","getBalanceAndContext","_getBalance","_callee6","_callee6$","_context6","getBalance","_x8","_x9","_getBlockTime","_callee7","_callee7$","_context7","getBlockTime","_x10","_getMinimumLedgerSlot","_callee8","_callee8$","_context8","getMinimumLedgerSlot","_getFirstAvailableBlock","_callee9","_callee9$","_context9","getFirstAvailableBlock","_getSupply","_callee10","configArg","_callee10$","_context10","getSupply","_x11","_getTokenSupply","_callee11","tokenMintAddress","_callee11$","_context11","getTokenSupply","_x12","_x13","_getTokenAccountBalance","_callee12","tokenAddress","_callee12$","_context12","getTokenAccountBalance","_x14","_x15","_getTokenAccountsByOwner","_callee13","ownerAddress","_extractCommitmentFro3","_args","_callee13$","_context13","getTokenAccountsByOwner","_x16","_x17","_x18","_getParsedTokenAccountsByOwner","_callee14","_callee14$","_context14","getParsedTokenAccountsByOwner","_x19","_x20","_x21","_getLargestAccounts","_callee15","_callee15$","_context15","getLargestAccounts","_x22","_getTokenLargestAccounts","_callee16","mintAddress","_callee16$","_context16","getTokenLargestAccounts","_x23","_x24","_getAccountInfoAndContext","_callee17","_extractCommitmentFro4","_callee17$","_context17","getAccountInfoAndContext","_x25","_x26","_getParsedAccountInfo","_callee18","_extractCommitmentFro5","_callee18$","_context18","getParsedAccountInfo","_x27","_x28","_getAccountInfo","_callee19","_callee19$","_context19","_x29","_x30","_getMultipleParsedAccounts","_callee20","publicKeys","rawConfig","_extractCommitmentFro6","_callee20$","_context20","getMultipleParsedAccounts","_x31","_x32","_getMultipleAccountsInfoAndContext","_callee21","_extractCommitmentFro7","_callee21$","_context21","getMultipleAccountsInfoAndContext","_x33","_x34","_getMultipleAccountsInfo","_callee22","_callee22$","_context22","getMultipleAccountsInfo","_x35","_x36","_getStakeActivation","_callee23","_extractCommitmentFro8","_callee23$","_context23","getStakeActivation","_x37","_x38","_x39","_getProgramAccounts","_callee24","configOrCommitment","_extractCommitmentFro9","configWithoutEncoding","baseSchema","_callee24$","_context24","_excluded2","withContext","getProgramAccounts","_x40","_x41","_getParsedProgramAccounts","_callee25","_extractCommitmentFro10","_callee25$","_context25","getParsedProgramAccounts","_x42","_x43","_confirmTransaction","_callee26","strategy","rawSignature","_config$abortSignal","_config","decodedSignature","_callee26$","_context26","aborted","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","_x44","_x45","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","_callee27","_callee27$","_context27","getSignatureStatus","abortConfirmation","removeSignatureListener","_confirmTransactionUsingBlockHeightExceedanceStrategy","_callee30","_ref8$strategy","expiryPromise","_this$getTransactionC","cancellationPromise","outcome","_callee30$","_context30","checkBlockHeight","_callee28","_callee28$","_context28","_callee29","currentBlockHeight","_callee29$","_context29","BLOCKHEIGHT_EXCEEDED","race","_x46","_confirmTransactionUsingDurableNonceStrategy","_callee33","_ref11$strategy","_this$getTransactionC2","_signatureStatus","signatureStatus","_outcome$slotInWhichN","commitmentForStatus","_callee33$","_context34","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","_callee31","_yield$_this4$getNonc","_context31","_callee31$","_context32","getNonceAndContext","_callee32","_callee32$","_context33","NONCE_INVALID","slotInWhichNonceDidAdvance","_x47","_confirmTransactionUsingLegacyTimeoutStrategy","_callee34","_this5","timeoutId","_this$getTransactionC3","_callee34$","_context35","timeoutMs","TIMED_OUT","_x48","_getClusterNodes","_callee35","_callee35$","_context36","getClusterNodes","_getVoteAccounts","_callee36","_callee36$","_context37","getVoteAccounts","_x49","_getSlot","_callee37","_extractCommitmentFro11","_callee37$","_context38","_x50","_getSlotLeader","_callee38","_extractCommitmentFro12","_callee38$","_context39","getSlotLeader","_x51","_getSlotLeaders","_callee39","startSlot","_callee39$","_context40","getSlotLeaders","_x52","_x53","_getSignatureStatus","_callee40","_yield$this$getSignat","_callee40$","_context41","getSignatureStatuses","_x54","_x55","_getSignatureStatuses","_callee41","_callee41$","_context42","_x56","_x57","_getTransactionCount","_callee42","_extractCommitmentFro13","_callee42$","_context43","getTransactionCount","_x58","_getTotalSupply","_callee43","_callee43$","_context44","excludeNonCirculatingAccountsList","getTotalSupply","_x59","_getInflationGovernor","_callee44","_callee44$","_context45","getInflationGovernor","_x60","_getInflationReward","_callee45","_extractCommitmentFro14","_callee45$","_context46","getInflationReward","_x61","_x62","_x63","_getInflationRate","_callee46","_callee46$","_context47","getInflationRate","_getEpochInfo","_callee47","_extractCommitmentFro15","_callee47$","_context48","getEpochInfo","_x64","_getEpochSchedule","_callee48","epochSchedule","_callee48$","_context49","getEpochSchedule","_getLeaderSchedule","_callee49","_callee49$","_context50","getLeaderSchedule","_getMinimumBalanceForRentExemption","_callee50","_callee50$","_context51","_x65","_x66","_getRecentBlockhashAndContext","_callee51","_callee51$","_context52","getRecentBlockhashAndContext","_x67","_getRecentPerformanceSamples","_callee52","_callee52$","_context53","getRecentPerformanceSamples","_x68","_getFeeCalculatorForBlockhash","_callee53","_res$result","_callee53$","_context54","getFeeCalculatorForBlockhash","_x69","_x70","_getFeeForMessage","_callee54","wireMessage","_callee54$","_context55","_x71","_x72","_getRecentPrioritizationFees","_callee55","_config$lockedWritabl","_callee55$","_context56","lockedWritableAccounts","getRecentPrioritizationFees","_x73","_getRecentBlockhash","_callee56","_callee56$","_context57","getRecentBlockhash","_x74","_getLatestBlockhash","_callee57","_callee57$","_context58","getLatestBlockhashAndContext","getLatestBlockhash","_x75","_getLatestBlockhashAndContext","_callee58","_extractCommitmentFro16","_callee58$","_context59","_x76","_isBlockhashValid","_callee59","_extractCommitmentFro17","_callee59$","_context60","isBlockhashValid","_x77","_x78","_getVersion","_callee60","_callee60$","_context61","getVersion","_getGenesisHash","_callee61","_callee61$","_context62","getGenesisHash","_getBlock","_callee62","_extractCommitmentFro18","_res","_res2","_callee62$","_context63","_buildArgsAtLeastConfirmed","transactionDetails","t1","getBlock","_x79","_x80","_getParsedBlock","_callee63","_extractCommitmentFro19","_res3","_res4","_callee63$","_context64","getParsedBlock","_x81","_x82","_getBlockProduction","_callee64","extra","_callee64$","_context65","_excluded3","getBlockProduction","_x83","_getTransaction","_callee65","_extractCommitmentFro20","_callee65$","_context66","getTransaction","_x84","_x85","_getParsedTransaction","_callee66","_extractCommitmentFro21","_callee66$","_context67","getParsedTransaction","_x86","_x87","_getParsedTransactions","_callee67","_this6","_extractCommitmentFro22","_callee67$","_context68","getParsedTransactions","_x88","_x89","_getTransactions","_callee68","_this7","_extractCommitmentFro23","_callee68$","_context69","getTransactions","_x90","_x91","_getConfirmedBlock","_callee69","block","_callee69$","_context70","_ref17","getConfirmedBlock","_x92","_x93","_getBlocks","_callee70","endSlot","_callee70$","_context71","getBlocks","_x94","_x95","_x96","_getBlockSignatures","_callee71","_callee71$","_context72","getBlockSignatures","_x97","_x98","_getConfirmedBlockSignatures","_callee72","_callee72$","_context73","getConfirmedBlockSignatures","_x99","_x100","_getConfirmedTransaction","_callee73","_callee73$","_context74","getConfirmedTransaction","_x101","_x102","_getParsedConfirmedTransaction","_callee74","_callee74$","_context75","getParsedConfirmedTransaction","_x103","_x104","_getParsedConfirmedTransactions","_callee75","_this8","_callee75$","_context76","getParsedConfirmedTransactions","_x105","_x106","_getConfirmedSignaturesForAddress","_callee76","firstAvailableBlock","highestConfirmedRoot","_block","confirmedSignatureInfo","_callee76$","_context77","until","before","getConfirmedSignaturesForAddress2","getConfirmedSignaturesForAddress","_x107","_x108","_x109","_getConfirmedSignaturesForAddress2","_callee77","_callee77$","_context78","_x110","_x111","_x112","_getSignaturesForAddress","_callee78","_callee78$","_context79","getSignaturesForAddress","_x113","_x114","_x115","_getAddressLookupTable","_callee79","_yield$this$getAccoun","accountInfo","_callee79$","_context80","getAddressLookupTable","_x116","_x117","_getNonceAndContext","_callee80","_yield$this$getAccoun2","_callee80$","_context81","_x118","_x119","_getNonce","_callee81","_callee81$","_context82","getNonce","_x120","_x121","_requestAirdrop","_callee82","_callee82$","_context83","requestAirdrop","_x122","_x123","_blockhashWithExpiryBlockHeight2","_callee83","disableCache","timeSinceFetch","expired","_callee83$","_context84","_pollNewBlockhash","_blockhashWithExpiryBlockHeight","_x124","_pollNewBlockhash2","_callee84","startTime","cachedLatestBlockhash","cachedBlockhash","_callee84$","_context85","_getStakeMinimumDelegation","_callee85","_extractCommitmentFro24","_callee85$","_context86","getStakeMinimumDelegation","_x125","_simulateTransaction","_callee86","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","_wireTransaction","_encodedTransaction","_config2","_args87","_unsafeRes","_res5","originalTx","_signature","encodedTransaction","_logs","traceIndent","logTrace","_callee86$","_context87","sigVerify","simulateTransaction","_x126","_x127","_x128","_sendTransaction","_callee87","signersOrOptions","_wireTransaction2","_signature2","_callee87$","_context88","sendRawTransaction","_x129","_x130","_x131","_sendRawTransaction","_callee88","rawTransaction","_callee88$","_context89","sendEncodedTransaction","_x132","_x133","_sendEncodedTransaction","_callee89","_logs2","_callee89$","_context90","_x134","_x135","_this9","setInterval","_callee90","_callee90$","_context91","_updateSubscriptions","_this10","MAX_SAFE_INTEGER","clearInterval","_ref19","_ref20","_setSubscription","nextSubscription","_this$_subscriptionsB","prevState","stateChangeCallbacks","_unused2","clientSubscriptionId","_this$_subscriptionSt","_this11","_updateSubscriptions2","_callee94","_this12","activeWebSocketGeneration","isCurrentConnectionStillActive","_callee94$","_context95","_ref21","_callee93","_callee93$","_context94","callbacks","serverSubscriptionId","_callee91","_serverSubscriptionId","_callee91$","_context92","_callee92","unsubscribeMethod","_callee92$","_context93","_x136","_handleServerNotification","callbackArgs","_create","_makeSubscription","subscriptionConfig","_this13","existingSubscription","_callee95","_callee95$","_context96","onAccountChange","_removeAccountChangeListener","_callee96","_callee96$","_context97","_unsubscribeClientSubscription","removeAccountChangeListener","_x137","_create2","accountId","onProgramAccountChange","filters","_removeProgramAccountChangeListener","_callee97","_callee97$","_context98","removeProgramAccountChangeListener","_x138","onLogs","mentions","_removeOnLogsListener","_callee98","_callee98$","_context99","removeOnLogsListener","_x139","_create3","_create4","onSlotChange","_removeSlotChangeListener","_callee99","_callee99$","_context100","removeSlotChangeListener","_x140","_create5","onSlotUpdate","_removeSlotUpdateListener","_callee100","_callee100$","_context101","removeSlotUpdateListener","_x141","_unsubscribeClientSubscription2","_callee101","subscriptionName","dispose","_callee101$","_context102","_x142","_x143","override","_create6","_this14","_err","onSignatureWithOptions","_this15","_options$commitment","_excluded4","_removeSignatureListener","_callee102","_callee102$","_context103","_x144","_create7","onRootChange","_removeRootChangeListener","_callee103","_callee103$","_context104","removeRootChangeListener","_x145","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","_PublicKey$findProgra","_PublicKey$findProgra2","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","RequestUnits","additionalFee","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","SetComputeUnitPrice","microLamports","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","genShake","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","hasEvenY","U1","U2","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","rand","mod.hashToPrivateScalar","fromPrivateKey","isProbPub","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","sg","_sig","fromDER","derError","fromCompact","SWUFpSqrtRatio","c2","c3","c4","c5","c6","c7","sqrtRatio","tv5","tv4","isQR","tvv5","mapToCurveSimpleSWU","mod.validateField","tv6","HMAC","iHash","oHash","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","fe","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","pointToBytes","numTo32b","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","k_","schnorrVerify","pub","isoMap","htf.isogenyMap","mapSWU","ecdsaSign","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","_params$instructionIn","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_ecdsaSign","_ecdsaSign2","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","Authorize","newAuthorized","stakeAuthorizationType","custodianPubkey","decodeAuthorizeWithSeed","AuthorizeWithSeed","authoritySeed","authorityOwner","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","authorize","authorizeWithSeed","splitInstruction","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","_decodeData3$voteAuth","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","_sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,29,50,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,102,103,104,105,106]}